version: '3.8'

services:
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY}/frontend:latest
    container_name: sgblock-frontend
    ports:
      - "8080:80"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sgblock-network

  backend:
    image: ghcr.io/${GITHUB_REPOSITORY}/backend:latest
    container_name: sgblock-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - PORT=3000
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - sgblock-network

  mongodb:
    image: mongo:6.0
    container_name: sgblock-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=sgblock
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: unless-stopped
    networks:
      - sgblock-network

  nginx:
    image: nginx:alpine
    container_name: sgblock-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - sgblock-network

volumes:
  mongodb_data:

networks:
  sgblock-network:
    driver: bridge